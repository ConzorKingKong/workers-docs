id = "uuid"
name = "Create UUIDs"
description = "Create a version 4 revision 2 UUID inside a worker"
code = '''
async function handleRequest(request) {
  const UUID = createUUID()
  const obj = {id: UUID}
  return new Response(JSON.stringify(obj))
}
addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})
/**
 * Creates a true-random array buffer.
 * An array buffer is an array of bytes
 * @param {length} How long you want the array buffer to be
 */
function createRandomArrayBuffer(len) {
  return crypto.getRandomValues(new Uint8Array(len))
}
/**
 * Turns an array buffer into a string of hexidecimal characters
 * @param {arrayBuffer} array buffer you want to turn into a hexidecimal string
 */
function createHex(arrBuff) {
  const hashArray = Array.from(arrBuff);
  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
}
/**
 * Combines helper functions above to create the UUID
 */
function createUUID() {
  const arrBuff = createRandomArrayBuffer(16)
  // set Msb0-3 to 0100 to be RFC 4122 compliant
  arrBuff[6] = 0x40 | (arrBuff[6] & 0xf)
  // set Msb0-1 to 10 to be RFC 4122 compliant
  arrBuff[8] = 0x80 | (arrBuff[8] & 0x3f)
  const arr = createHex(arrBuff)
  return `${arr.slice(0,8)}-${arr.slice(8,12)}-${arr.slice(12,16)}-${arr.slice(16,20)}-${arr.slice(20,32)}`
}
'''
demo_url = "https://cloudflareworkers.com/#bbf938708bd0397531aec2536d06eedf:https://tutorial.cloudflareworkers.com/"
